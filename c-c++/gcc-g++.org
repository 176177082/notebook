#+SETUPFILE:  ./_style/style.setup
#+OPTIONS:    H:3 num:nil toc:t \n:nil ::t |:t ^:nil -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc
#+TITLE:      gcc-g++ 笔记
#+AUTHOR:     rgb_24bit
#+EMAIL:      rgb_24bit@foxmail.com

* GCC
** 常用命令行选项
   1. *-o*: 指定输出文件名
   2. *-Wall*: 显示所有警告信息
   3. *-E*: 只输出预编译结果
   4. *-S*: 输出汇编代码
   5. *-c*: 输出目标文件
   6. *-save-temps*: 输出所有中间文件(.i, .o...)
   7. *-g*: 生成供调试用的可执行文件, 可以在gdb中运行
   8. *-l:* 指定所使用到的函数库
   9. -L: 指定函数库所在的文件夹
   10. *-I*: 指定头文件所在的文件夹

** 编译C程序
   #+CAPTIONS: 文件扩展名
   | 扩展名 | 文件内容                       |
   |--------+--------------------------------|
   | <l>    | <l>                            |
   |--------+--------------------------------|
   | .a     | 静态对象库                     |
   | .c     | 需要预处理的C语言源代码        |
   | .h     | C语言源代码头文件              |
   | .i     | 无需预处理的C语言头文件        |
   | .o     | 目标文件, 格式和应用的连接相符 |
   | .s     | 汇编语言代码                   |
   | .so    | 共享对象库                     |
   |--------+--------------------------------|

*** 编译选项
    * *无选项*: 直接编译为可执行文件
    * *-o*: 重命名生成的文件
    * *-c*: 生成目标文件(.o)
    * *-E*: 只进行预处理操作, .i
    * *-S*: 生成汇编语言代码, .s
*** 静态库
    * 静态库创建: *ar -r libname 目标文件...*

*** 标准
    #+CAPTIONS: 编译标准
    | 选项      | 描述                          |
    |-----------+-------------------------------|
    | <l>       | <l>                           |
    |-----------+-------------------------------|
    | -ansi     | 编译标准程序, 也和GNU后缀兼容 |
    | -pedantic | 严格按照标准, 提示警告信息    |
    | -std=c89  | ISO C89 标准                  |
    | -std=c99  | ISO C99 标准                  |
    | ...       | ...                           |

* 源文件相关
** 声明内容的相关作用
   - __attribute__ ((__unused__))  声明该函数或变量可能不会使用, 避免编译器发出警告
   - 符号 ## 起连接字符作用
   - extern "C" {} 声明该段代码编译器编译时按C语言的方式编译, 用于C++

* 平台相关
   + ~-m32~ 32 位系统
   + ~-m64~ 64 为系统

* 应用程序图标
  工具: windres
  步骤:
  1. 准备好图标文件: example.ico
  2. 新建扩展名为 .rc 的文本文件, 如: example.rc
  3. 添加以下内容: =1 ICON "example.ico"=
  4. 编译文件: =windres example.rc example.o=
  5. 编译应用程序:
     =gcc -o app app.o example.o=
     =g++ -o app app.o example.o=

