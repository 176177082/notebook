#+SETUPFILE:  ./_style/style.setup
#+TITLE:      C 语言标准

* ANSI C 对 K&R C 的修订
  + 对于源文件内部的标识符，有效的最小长度扩充到31个字符。文件间连接时，标识符的最小有效长度仍然为6个字符。（许多实现都支持更大的长度）
  + 增加了几个新关键字：void，const，volatile，signed，enum。抛弃了老关键字entry。
  + 在换意字符 \ 之后写非规定的序列，其作用确定为无定义。
  + 规定8和9都不是八进制数的合法字符。
  + 引进了数的后缀字符：整数的U和L，浮点数的F和L。
  + 规定连续出现的字符串常量将被拼接在一起。
  + 引进了“宽字符”的概念。
  + 将字符也确定为带符号（signed）和不带符号（unsigned）的。
  + 丢弃了long float（原来作为double的同义词）。
  + 引入了void类型，用 (void*) 表示通用指针的类型（过去人们通常用 (char*)）。
  + 对算术类型规定了最小表示范围。要求每个C语言系统用头文件（<limits.h>;和<float.h>;）说明实现中的具体规定。
  + 引进了枚举定义enum。
  + 采用了来自C++的类型修饰符，如const。
  + 规定字符串常量是不可修改的。
  + 改变了算术类型的隐含转换规则。
  + 删去了一些过时赋值运算符，如 =+。规定赋值运算符都是基本单词，如 += 之间不能有空格分隔。
  + 引进了与一元 - 运算符对应的一元 + 运算符。
  + 指向函数的指针可以直接放在函数调用的位置，不必显式地写间接操作。
  + 允许结构地整体赋值，作为函数参数和返回值传递。
  + 允许将取地址运算符作用于数组，得到的是指向有关数组的指针。
  + 标准规定 sizeof 运算符的返回值为 size_t 类型（某个无符号整型），这一类型在标准头文件<stddef.h>;里定义。同时在那里定义的还有 ptrdiff_t 类型，它是指针减运算的结果类型。
  + 规定取地址运算符不能作用于 register 变量。
  + 规定移位表达式的类型为其左运算对象的类型。
  + 允许建立指向过数组末元素一个位置的指针，以及对它的算术运算和关系运算。
  + （从C++）引进了包含参数类型的函数原型概念，引进了变长参数表函数的概念。仍允许老的形式，但仅仅是作为过时形式保留。
  + 标准规定任何局部声明的作用域仅仅是当前的块（复合语句）。
  + 规定函数参数作为加入函数体（复合语句）的声明，因此不能用变量声明去覆盖。
  + 有关名字空间的规定：所有结构、联合和枚举标记在一个名字空间里，标号是另一个名字空间。
  + 联合变量在定义时也可以初始化，规定初始化其第一个成分。
  + 自动结构、联合和数组也可以初始化，但限制其初始化方式（其中只能包含常量表达式）。
  + 带大小描述的字符数组也可以用大小与之相同的字符串常量初始化（结束的 \0 被删除）。
  + 开关语句的控制表达式和case标号可以是任何整型的（包括字符类型）。   
* ISO C90 标准(ANSI)
  默认编译选项(-ansi, -std=c89)
* ISO C99 标准
  编译选项 -std=c99
** 相较于 C90 区别
   1. 增加了对编译器的限制，比如源程序每行要求至少支持到 4095 字节，变量名函数名的要求支持到 63 字节（extern 要求支持到 31）
   2. 增强了预处理功能
   3. 增加了新关键字 restrict, inline, _Complex, _Imaginary, _Bool；支持 long long, long double _Complex, float _Complex 等类型
   4. 支持不定长的数组，即数组长度可以在运行时决定，比如利用变量作为数组长度。声明时使用 int a[var] 的形式。不过考虑到效率和实现，不定长数组不能用在全局，或struct 与union 里。
   5. 变量声名不必放在语句块的开头，，for 语句提倡写成 for(int i=0;i<100;++i) 的形式，即i 只在for 语句块内部有效
   6. 允许采用（type_name）{xx,xx,xx} 类似于 C++ 的构造函数的形式构造匿名的结构体
   7. 初始化结构的时候允许对特定的元素赋值，形式为：
      struct test{int a[3]，b;} foo[] = { [0].a = {1}, [1].a = 2 }
      struct test{int a, b, c, d;} foo=  { .a=1, .c=3,4, .b=5 };  // 3,4 是对 .c,.d 赋值的
   8. 格式化字符串中，利用 \u 支持 unicode 的字符
   9. 支持 16 进制的浮点数的描述；printf scanf 的格式化串增加了对 long long int 类型的支持；浮点数的内部数据描述支持了新标准，可以使用 #pragma 编译器指令指定
   10. 除了已有的 __line__ __file__ 以外，增加了 __func__ 得到当前的函数名
   11. 允许编译器化简非常数的表达式；取消了函数返回类型默认为 int 的规定
   12. 修改了 / % 处理负数时的定义，这样可以给出明确的结果，例如在C89中-22 / 7 = -3, -22 % 7 = -1，也可以-22 / 7= 4, -22 % 7 = 6。 而C99中明确为-22 / 7 = -3, -22 % 7 = -1，只有一种结果
   13. 允许 struct 定义的最后一个数组不指定其长度，写做 [](flexible array member)
   14. const const int i 将被当作const int i 处理；输入输出对宽字符以及长整数等做了相应的支持
   15. 增加和修改了一些标准头文件，比如定义 bool 的 <stdbool.h> ，定义一些标准长度的 int 的 <inttypes.h> ，定义复数的 <complex.h> ，定义宽字符的 <wctype.h> ，类似于泛型的数学函数 <tgmath.h>， 浮点数相关的 <fenv.h>。 在<stdarg.h> 增加了 va_copy 用于复制 ... 的参数。 里增加了 struct tmx ，对 struct tm 做了扩展
