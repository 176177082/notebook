#+TITLE:      链接

* 目录                                                    :TOC_4_gh:noexport:
- [[#可执行目标文件的生成][可执行目标文件的生成]]
- [[#目标文件][目标文件]]
- [[#符号和符号表][符号和符号表]]
  - [[#符号解析][符号解析]]
- [[#重定位][重定位]]

* 可执行目标文件的生成
  可执行目标文件的生成一般需要： 预处理， 编译， 汇编， 链接 四个步骤。

  链接过程一般会完成： 符号解析和重定位两个任务。

* 目标文件
  存在三类目标文件：
  + 可重定位目标文件： 包含二进制代码和数据， 可与其它可重定位目标文件合并
    起来生成一个可执行目标文件

  + 可执行目标文件： 包含二进制代码和数据， 可被直接复制到内存并执行
  + 共享目标文件： 特殊类型的可重定位目标文件， 可以在加载或运行时被动态的
    加载进内存并连接

* 符号和符号表
  + 全局符号： 由模块 ~m~ 定义并能被其他模块引用的非静态函数和全局变量
  + 外部符号： 由其他模块定义并被模块 ~m~ 引用的符号
  + 局部符号： 静态函数或变量

  教程： [[http://blog.wuxu92.com/csapp-linking/][CSAPP：链接]]

** 符号解析
   函数定义和已初始化的全局变量是强符号， 其他全局符号和外部符号是弱符号。

   + 不允许有多个同名的强符号
   + 如果有一个强符号和多个弱符号同名， 那么选择强符号
   + 如果有多个弱符号同名， 那么从这些弱符号中 _任意选一个_

* 重定位
  + 相对地址引用
    1. 获取指向 _需要重定向的引用符号_ 的指针
    2. 获取 _需要重定向的引用符号_ 的真实地址
    3. 计算出 _引用符号_ 和 _真实地址_ 之间的偏移
    4. 间接引用指针将 _引用符号_ 的值修改为偏移量

  + 绝对地址引用
    1. 获取指向 _需要重定向的引用符号_ 的指针
    2. 间接引用指针将 _引用符号_ 的值修改为真实地址的值
