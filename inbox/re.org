* 正则分解
  #+BEGIN_SRC python
    # -*- coding: utf-8 -*-

    class BreakDown(object):
        def __init__(self, regex):
            self.groups = [regex]
            self.regex = regex
            self.index = 0
            self.boundary = len(regex)

        def parse(self):
            while self.index < self.boundary:
                if self.peek() == '\\':
                    self.next()
                elif self.peek() == '(':
                    self.append()
                self.next()
            return self.groups


        def next(self):
            self.index += 1

        def peek(self):
            return self.regex[self.index]

        def append(self):
            index, boundary = self.index, self.boundary

            left_brackets_count = 0
            group_string = index * ' '
            while index < boundary:
                group_string += self.regex[index]

                if self.regex[index] == '\\':
                    group_string += self.regex[index + 1]
                    index += 1

                elif self.regex[index] == '(':
                    left_brackets_count += 1

                elif self.regex[index] == ')' and left_brackets_count == 1:
                    break

                index += 1
            self.groups.append(group_string)


    if __name__ == '__main__':
        import sys

        i, b = 0, BreakDown(sys.argv[1])
        for group in b.parse():
            print('%d: %s' % (i, group))
            i += 1
  #+END_SRC
