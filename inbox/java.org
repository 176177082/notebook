* 相关链接
  + 网络操作相关：
    + [[https://www.baeldung.com/java-http-request][Do a Simple HTTP Request in Java]]

  + 图像处理相关：
    + [[https://www.cnblogs.com/XL-Liang/archive/2011/12/14/2287566.html][java 图片处理 (文字水印、图片水印、缩放、补白)]]
    + [[https://segmentfault.com/a/1190000011388060][Java图像处理之正片叠底]]

  + 并发操作相关
    + [[https://juejin.im/post/594a24defe88c2006aa01f1c][Java 之 synchronized 详解]]

  + 其他
    + [[https://www.zhihu.com/question/37401125][Java中的强引用，软引用，弱引用，虚引用有什么用？]]
    + [[https://www.cnblogs.com/Qian123/p/5710533.html][Java提高篇——对象克隆（复制） - 萌小Q - 博客园]]

* 集合
  + 自定义集合时可以继承 AbstractXXX
  + 迭代器位于两个元素之间
  + 轻量级集合包装器

* 并发
  + [[https://www.cnblogs.com/dolphin0520/p/3920397.html][Java并发编程：CountDownLatch、CyclicBarrier和Semaphore - Matrix海子 - 博客园]]
  + 理解原子性时需要记住：读取、计算、写入是可能被分开的

* net
  + [[https://blog.csdn.net/dabing69221/article/details/17351881][Java TCP/IP Socket — close()/shutdownOutput()/shutdownInput() 分析 - 开挂的程序猿 - CSDN博客]]
  + [[https://www.cnblogs.com/amosli/p/3821474.html][Java--使用多线程下载,断点续传技术原理(RandomAccessFile) - Hi_Amos - 博客园]]
  + [[https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Range][Range - HTTP | MDN]]

  URLConnection:
  + 调用 openConnection 方法发起请求
  + 调用 getXXX 方法后会发起请求
  + 单个实例只能发起一个请求，因此，调用 getXXX 方法后就不能设置请求属性了

* mock
  + [[https://waylau.com/mockito-quick-start/][Mockito 简明教程 | waylau.com]]
    
* 问题
  + 二维数组和 Comparator.comparing
  + StringBuilder 的实现 - [[https://github.com/exsourcode/jdk8u-jdk/blob/master/src/share/classes/java/lang/AbstractStringBuilder.java#L427][jdk8u-jdk/AbstractStringBuilder.java at master · exsourcode/jdk8u-jdk]]
    1. 将要添加的对象转换为字符串
    2. 检查容量确保足够
    3. 将目标字符串复制到字符数组
    4. [[https://www.runoob.com/java/java-string-getchars.html][Java getChars() 方法 | 菜鸟教程]]
  + System.arraycopy 和 Arrays.copyof 的区别 - [[https://www.programcreek.com/2015/03/system-arraycopy-vs-arrays-copyof-in-java/][System.arraycopy() vs. Arrays.copyOf() in Java]]
    + 主要在于一个创建新的数组，一个不会
  + [[https://stackoverflow.com/questions/47747199/why-does-hashmap-allow-a-null-key][java - Why does Hashmap allow a null key? - Stack Overflow]]

* JDBC
  #+begin_example
    MySQL Type      Java Type
    ----------      ---------
    CHAR            String
    VARCHAR         String
    LONGVARCHAR     String
    NUMERIC         java.math.BigDecimal
    DECIMAL         java.math.BigDecimal
    BIT             boolean
    TINYINT         byte
    SMALLINT        short
    INTEGER         int
    BIGINT          long
    REAL            float
    FLOAT           double
    DOUBLE          double
    BINARY          byte[]
    VARBINARY       byte[]
    LONGVARBINARY   byte[]
    DATE            java.sql.Date
    TIME            java.sql.Time
    TIMESTAMP       java.sql.Tiimestamp
  #+end_example
  
  数据库中 DECIMAL 类型默认是不带小数位的，需要注意。
* 正则表达式
  通过如下的正则表单式去除查询条件中的通配符：
  #+begin_src java
    String.replaceAll("([\\\\_%])", "\\\\$1");
  #+end_src
  
  实际效果：
  #+begin_src java
    jshell> String str = "l%k_e\\";
    str ==> "l%k_e\\"

    jshell> str.replaceAll("([\\\\_%])", "\\\\$1");
    $5 ==> "l\\%k\\_e\\\\"
  #+end_src

* 异步
  + [[https://juejin.im/post/5adbf8226fb9a07aac240a67][Java 8 CompletableFuture 教程 - 掘金]]
  + [[https://juejin.im/post/5b4622df5188251ac9766f47#heading-7][异步技巧之CompletableFuture - 掘金]]

* solution
  + [[https://www.cnblogs.com/rjzheng/p/9041659.html][【原创】分布式之数据库和缓存双写一致性方案解析 - 孤独烟 - 博客园]]

* java
  Maven - SNAPSHOST - RELEASE

* 协程
  + [[https://www.v2ex.com/t/598693#reply13][用 Java 撸了一个 yield 的玩具 - V2EX]]
  + [[https://www.v2ex.com/t/459387][天哪，看我竟然在 Java 语言里撸出了什么 - V2EX]]

* manifest
  + [[https://docs.oracle.com/javase/8/docs/technotes/guides/jar/jar.html#JARManifest][JAR File Specification]]

* Agent
  本来是想看一下调试中断点是怎么一回事，结果，和 Java Agent 扯上了。

  Java Agent 是一种依附于 JVM 进程的程序，可以通过这种方式来监听控制 JVM 进程。

  加载 Java Agent 的方式主要有两种：
  1. 通过命令行参数指定要加载的 Java Agent 程序，主要的选项为：
     |------------------------------+------------------------------|
     | 选项                         | 作用                         |
     |------------------------------+------------------------------|
     | javaagent:jarpath[=options]  | 加载指定的 jar               |
     | agentlib:libname[=options]   | 加载 PATH 环境变量下的动态库 |
     | agentpath:pathname[=options] | 通过完全路径加载动态库       |
     |------------------------------+------------------------------|

     参考：
     + [[http://www.voidcn.com/article/p-ptghvuzj-bbz.html][6.1 java 选项 -javaagent、-agentlib、-agentpath - 程序园]]
     + 

  2. 通过 Sun 公司提供的 VirtualMachine 接口动态加载 Agent，参考：
     + [[https://www.cnblogs.com/LittleHann/p/4783581.html][Java Attach API - 郑瀚 Andrew.Hann - 博客园]]
     + [[https://docs.oracle.com/javase/8/docs/jdk/api/attach/spec/com/sun/tools/attach/VirtualMachine.html][VirtualMachine (Attach API )]]
     
  其中，Java Agent 程序的编写利用了 java.lang.instrument 包下提供的接口，参考：
  + [[https://www.cnkirito.moe/instrument/][JAVA 拾遗--Instrument 机制 | 徐靖峰|个人博客]]
  + [[https://www.ibm.com/developerworks/cn/java/j-lo-jse61/index.html][Java SE 6 新特性: Instrumentation 新功能]]

  至于调试：[[https://www.ibm.com/developerworks/cn/java/j-lo-jpda3/index.html][深入 Java 调试体系，第 3 部分: JDWP 协议及实现]]

* 注解
  + [[https://www.race604.com/annotation-processing/][Java 注解处理器]]


