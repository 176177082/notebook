* 相关链接
  + 网络操作相关：
    + [[https://www.baeldung.com/java-http-request][Do a Simple HTTP Request in Java]]

  + 图像处理相关：
    + [[https://www.cnblogs.com/XL-Liang/archive/2011/12/14/2287566.html][java 图片处理 (文字水印、图片水印、缩放、补白)]]
    + [[https://segmentfault.com/a/1190000011388060][Java图像处理之正片叠底]]

  + 并发操作相关
    + [[https://juejin.im/post/594a24defe88c2006aa01f1c][Java 之 synchronized 详解]]

  + 其他
    + [[https://www.zhihu.com/question/37401125][Java中的强引用，软引用，弱引用，虚引用有什么用？]]
    + [[https://www.cnblogs.com/Qian123/p/5710533.html][Java提高篇——对象克隆（复制） - 萌小Q - 博客园]]

* 集合
  + 自定义集合时可以继承 AbstractXXX
  + 迭代器位于两个元素之间
  + 轻量级集合包装器

* 并发
  + 理解原子性时需要记住：读取、计算、写入是可能被分开的

* net
  + [[https://blog.csdn.net/dabing69221/article/details/17351881][Java TCP/IP Socket — close()/shutdownOutput()/shutdownInput() 分析 - 开挂的程序猿 - CSDN博客]]
  + [[https://www.cnblogs.com/amosli/p/3821474.html][Java--使用多线程下载,断点续传技术原理(RandomAccessFile) - Hi_Amos - 博客园]]
  + [[https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Range][Range - HTTP | MDN]]

  URLConnection:
  + 调用 openConnection 方法发起请求
  + 调用 getXXX 方法后会发起请求
  + 单个实例只能发起一个请求，因此，调用 getXXX 方法后就不能设置请求属性了

* SPI
  + [[https://cxis.me/2017/04/17/Java%E4%B8%ADSPI%E6%9C%BA%E5%88%B6%E6%B7%B1%E5%85%A5%E5%8F%8A%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/][Java 中 SPI 机制深入及源码解析 | 大程熙]]
  + [[https://www.baeldung.com/java-spi][Java Service Provider Interface | Baeldung]]

* mock
  + [[https://waylau.com/mockito-quick-start/][Mockito 简明教程 | waylau.com]]
    
* 问题
  + 二维数组和 Comparator.comparing
  + StringBuilder 的实现 - [[https://github.com/exsourcode/jdk8u-jdk/blob/master/src/share/classes/java/lang/AbstractStringBuilder.java#L427][jdk8u-jdk/AbstractStringBuilder.java at master · exsourcode/jdk8u-jdk]]
    1. 将要添加的对象转换为字符串
    2. 检查容量确保足够
    3. 将目标字符串复制到字符数组
    4. [[https://www.runoob.com/java/java-string-getchars.html][Java getChars() 方法 | 菜鸟教程]]
  + System.arraycopy 和 Arrays.copyof 的区别 - [[https://www.programcreek.com/2015/03/system-arraycopy-vs-arrays-copyof-in-java/][System.arraycopy() vs. Arrays.copyOf() in Java]]
    + 主要在于一个创建新的数组，一个不会

* 同步
  + 静态方法 - 类对象
  + 实例方法 - 对象本身

* 注解
  如果要通过反射使用注解，那么应该将其配置为 RUNTIME

