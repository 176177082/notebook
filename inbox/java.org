* Misc
** 网络编程
   + [[https://docs.oracle.com/javase/tutorial/networking/overview/index.html][Lesson: Overview of Networking (The Java™ Tutorials > Custom Networking)]]
   + [[https://www.baeldung.com/java-http-request][Do a Simple HTTP Request in Java]]

** 图片处理
   + [[https://www.cnblogs.com/XL-Liang/archive/2011/12/14/2287566.html][java 图片处理 (文字水印、图片水印、缩放、补白)]]
   + [[https://segmentfault.com/a/1190000011388060][Java图像处理之正片叠底]]

** synchronized
   + [[https://juejin.im/post/594a24defe88c2006aa01f1c][Java 之 synchronized 详解]]

** 引用类型
   + [[https://www.zhihu.com/question/37401125][Java中的强引用，软引用，弱引用，虚引用有什么用？]]

* 对象的克隆
  + [[https://www.cnblogs.com/Qian123/p/5710533.html][Java提高篇——对象克隆（复制） - 萌小Q - 博客园]]

* wait
  + java 语言规范 - javase/specs
  + Runtime.addShutdownHook
  + 子类和父类同名的字段
  + [[https://stackoverflow.com/questions/11720288/is-an-interface-a-class][java - Is an interface a class? - Stack Overflow]]
  + int.class, Integer.class, Integer.TYPE

* Tomcat
  + [[https://stackoverflow.com/questions/1153521/setting-default-locale-for-tomcat-service-in-windows-xp][java - Setting default locale for Tomcat Service in Windows XP - Stack Overflow]]
  + [[https://stackoverflow.com/questions/9361623/catalina-home-environmental-variable-is-not-defined-correctly][tomcat6 - CATALINA_HOME environmental variable is not defined correctly - Stack Overflow]]
  + [[https://stackoverflow.com/questions/6623161/javac-option-to-compile-all-java-files-under-a-given-directory-recursively][javac option to compile all java files under a given directory recursively - Stack Overflow]]

* Proxy
  动态创建实现了指定接口的类，调用这个类的方法的时候实际上是调用内部包装的对象的方法。

  创建：
  #+BEGIN_SRC java
    Proxy.newProxyInstance(null, new Class<?>[] { Comparable.class }, InvocationHandler);
  #+END_SRC

  需要实现的方法：
  #+BEGIN_SRC java
    public Object invoke(Object proxy, Method m, Object[] args) throws Throwable {}
  #+END_SRC

  Timer:
  #+BEGIN_SRC java
    class TimerHandler implements InvocationHandler {
      private Object target;

      public TimerHandler(Object target) {
        this.target = target;
      }

      public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        long start = System.currentTimeMillis();
        method.invoke(target, args);
        long end = System.currentTimeMillis();
        System.out.printf("Runtime: %ldms\n", end - start);
      }
    }
  #+END_SRC

* 泛型
  + [[https://www.cnblogs.com/wuqinglong/p/9456193.html][Java泛型类型擦除以及类型擦除带来的问题 - 蜗牛大师 - 博客园]]

  + 泛型的类型检查是在 *编译前* 进行的
  + 类型参数放在修饰符后面返回值类型前面
  + 泛型方法的使用 - ~Object.<Class>method~
  + 限定类型： <T extends A & B>
  + 约束
    1. 运行时类型查询只能获取原始类型（反射）
    2. 不能实例化参数化类型的数组：
       #+BEGIN_SRC java
         Pair<String>[] table = new Pair<>[10]; // error
       #+END_SRC
       这会带来潜在的问题。
    3. 不能实例化类型变量
    4. 不能创造泛型数组 - 看一下 JDK 源码中的集合实现好了
    5. 泛型类的今天上下文中类型变量无效
  + 不能捕获或抛出泛型异常
  + Pair<Child> 是 Pair<? extends Super> 的子类
  + 通配符捕获：
    #+BEGIN_SRC java
      public static <T> void helper(Pair<T> p) {
        ...;
      }

      public static void swap(Pair<?> p) {
        helper(p);
      }
    #+END_SRC

* 集合
  + 自定义集合时可以继承 AbstractXXX
  + 迭代器位于两个元素之间
  + 轻量级集合包装器

* 并发
  + 理解原子性时需要记住：读取、计算、写入是可能被分开的

* 数组
  + 数组克隆对于数值类型来说是安全的，对于对象来说只是克隆了引用

* 环境变量
  + 运行库路径会默认加载，不许要自己设置，如果没有其他需要，就可以省略 CLASSPATH
  + JAVA_HOME 貌似没什么用

* net
  + [[https://blog.csdn.net/dabing69221/article/details/17351881][Java TCP/IP Socket — close()/shutdownOutput()/shutdownInput() 分析 - 开挂的程序猿 - CSDN博客]]
  + [[https://www.cnblogs.com/amosli/p/3821474.html][Java--使用多线程下载,断点续传技术原理(RandomAccessFile) - Hi_Amos - 博客园]]
  + [[https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Range][Range - HTTP | MDN]]

  URLConnection:
  + 调用 openConnection 方法发起请求
  + 调用 getXXX 方法后会发起请求
  + 单个实例只能发起一个请求，因此，调用 getXXX 方法后就不能设置请求属性了

* IO
  #+BEGIN_SRC java
    class FilterInputStream extends InputStream {
      protected	FilterInputStream(InputStream in) {}
    }
  #+END_SRC

