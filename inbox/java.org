* 构建工具
  + ant, maven, gradle

* gradle
  + http://wiki.jikexueyuan.com/project/GradleUserGuide-Wiki/build_script_basics/README.html

* JDK & JRE
  + https://www.zhihu.com/question/20317448/answer/14737358
  + https://blog.csdn.net/z15732621736/article/details/50603819

* 版本号
  + 1.02 - 1.1: Java
  + 1.2, 1.3, 1.4: Java2
  + 1.5+: Java5.0

* 程序结构
  + 最少一个类
  + 只有一个 main() 函数
  + 所有东西都需要包含在 class, interface, enum 中

* 布尔判断
  + Java 中 integer 和 boolean 是两种类型， 因此不能像这样：
    #+BEGIN_SRC java
      int x = 1;

      while (x) {}
    #+END_SRC

* 字符串
  + 字符串可以和整型直接拼加

* 文件名
  + https://blog.csdn.net/shaoxiaoning/article/details/40424087

* 数据类型
** primitive 主数据类型
   |---------+-----------------+--------------------------|
   | 类型    |            位数 | 值域                     |
   |---------+-----------------+--------------------------|
   | boolean | Java 虚拟机决定 | true or false            |
   | char    |              16 | 0 ~ 65535                |
   | byte    |               8 | -128 ~ 127               |
   | short   |              16 | -32768 ~ 32767           |
   | int     |              32 | -2147483648 ~ 2147483647 |
   | long    |              64 | -很大 ~ +很大            |
   | float   |              32 | 范围规模可变             |
   | double  |              64 | 范围规模可变             |
   |---------+-----------------+--------------------------|

   *PS*: 没有无符号数
   
   *PS*: 定义 ~float~ 的数值需要加 ~f~ 后缀， 如： ~float f = 32.45f~, 否则小数会
   默认当做 ~double~ 处理

   *PS*: 和 ~C~ 不同， 类似下面的行为在 ~Java~ 中不被允许， 编译器会报错：
   #+BEGIN_SRC java
     int x = 24;
     byte b = x;
   #+END_SRC
   隐式类型转换只允许在不会有数据丢失的情况下进行， 即: ~int~ 不能和
   ~float~ 直接转换。
   
   也不能使用类似 ~byte x = 128~ 的语句
   
   *PS*: 除此之外的类型的变量都是对一个对象的 *引用*, *对象* 实例保存在可回收垃圾的堆上

   *PS:* 所有引用变量的大小都一样， 不一样的是内存中的实例大小

   *PS*: 引用变量的空值为 ~null~
   
   *PS*: 和 ~Python~ 一样， 当一个实例对象的引用数为 0 时， 这个对象就可以被回收。

   *PS*: 实例对象通常通过 ~new~ 创建， 这会在内存中创建唯一的对象实例

   *PS*: 数组也是对象
   
   *PS*: 注意引用类型数组的初始化：
   #+BEGIN_SRC java
     Dog[] dog;  // 声明数组 dog
     dog = new Dog[7];  // 为 dog 分配内存

     for (int i = 0; i < 7; ++i) {
       dog[i] = new Dog();  // 为数组元素分配内存
     }
   #+END_SRC
   
   *PS*: String 不是 Java 关键字
   
   *PS*: 没有初始化的数值类型（包括 char） 默认为 0, 布尔类型默认为 false, 引用默认为 null.
   
   *PS*: 局部变量没有默认值， 使用前必须初始化

   *PS*: 可以使用 == 来判断两个主数据类型是否相对， 会判断两个引用是否引用同一个对象
   
** 标识符
   和 ~C~ 与 ~Python~ 不同， ~Java~ 的标识符包含 ~$~, 即可以用 ~$~ 开头。

   ~C~ 和 ~Python~ 只能是字母或下划线。

   这一点和 ~JavaScript~ 是相同的。
