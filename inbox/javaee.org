* Maven
  + [[http://wiki.jikexueyuan.com/project/maven/web-application.html][Maven - Web 应用 - Maven 教程 - 极客学院Wiki]]
  + [[https://dzone.com/articles/how-to-create-a-web-project-using-maven-in-eclipse-1][How to Create a Web Project Using Maven in Eclipse - DZone Java]]

* 相关链接
  + [[https://spring.io/understanding/POJO][Understanding POJO]]
  + [[https://zh.wikipedia.org/wiki/EJB][EJB - 维基百科，自由的百科全书]]
  + [[https://zh.wikipedia.org/wiki/JavaBeans][JavaBeans - 维基百科，自由的百科全书]]

* 问题
  + MIME
  + Tomcat 的使用

* IDEA
  1. 通过 Maven 创建 web-app
  2. 添加依赖项：
     #+BEGIN_SRC xml
       <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
       <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>3.1.0</version>
         <scope>provided</scope>
       </dependency>
     #+END_SRC
  3. 添加 Tomcat 插件：
     #+BEGIN_SRC xml
       <build>
         <finalName>servletp</finalName>
         <plugins>
           <plugin>
             <groupId>org.apache.tomcat.maven</groupId>
             <artifactId>tomcat7-maven-plugin</artifactId>
             <version>2.2</version>
             <configuration>
               <url>http://localhost:8080/servletp</url>
               <server>tomcat</server>
             </configuration>
           </plugin>
         </plugins>
       </build>
     #+END_SRC
  4. 编译 - package
  5. 运行 - tomcat7:run

  相关的问题：
  + Maven 插件配置
  + Maven 镜像配置
  + 插件 Tomcat7 的使用
  + web-app 项目结构
  + 编译属性
  + 配置 Emacs 作为而外的编辑工具 - [[https://www.jetbrains.com/help/idea/using-emacs-as-an-external-editor.html][Using Emacs as an External Editor - Help | IntelliJ IDEA]]

* JSP 编码
  #+BEGIN_SRC xml
    <jsp-config>
        <jsp-property-group>
            <url-pattern>*.jsp</url-pattern>
            <page-encoding>UTF-8</page-encoding>
        </jsp-property-group>
    </jsp-config>
  #+END_SRC

* JSP & EL
  JSP 将会被容器编译为 Servlet，因此，Servlet 能做的 JSP 基本都能做，但是：JSP 在 MVC 中的定位是 View，做好 View 的事情就足够了！
  
  JSP 元素类型包括：指令、声明、 EL 表达式、scriptlet、表达式、动作。
  |-----------+-----------------+-----------------------------------------------|
  | 元素类型  | 格式            | 相关                                          |
  |-----------+-----------------+-----------------------------------------------|
  | 指令      | ~<%@ ... %>~      | 通过指令的属性进行各种操作                    |
  | 声明      | ~<%! ... %>~      | 声明的内容将会成为 Servlet 的成员             |
  | 表达式    | ~<%= ... %>~      | 表达式的结果将作为隐式对象 out.println 的参数 |
  | 注释      | ~<%-- ... --%>~   |                                               |
  | 动作      | ~<xxx:xxx ... />~ |                                               |
  | scriptlet | ~<% ... %>~       | 将会被编译为 Java 代码                        |
  | EL 表达式 | ~${...}~          |                                               |
  |-----------+-----------------+-----------------------------------------------|
  
  JSP 隐式对象：
  + pageContext
  + out
  + request
  + response
  + session
  + application - ServletContext
  + config - 这个 JSP 实例的 ServletConfig
  + page - JSPServlet 实例

  EL 隐式对象：
  + pageScope - pageContext
  + requestScope - request
  + sessionScope - session
  + applicationScope - application
  + param
  + paramValues
  + header
  + headerValues
  + cookie
  + initParam
  + pageContext - Not Map

  pageScope、requestScope、sessionScope、applicationScope 中的属性可以省略域直接获取，但是存在同名属性的话还是通过隐式域操作比较准确。

