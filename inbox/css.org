* CSS 语法
  *CSS* 规则主要由两个部分组成： *选择器* 和 *声明*.

  #+HTML: <img src="//www.runoob.com/wp-content/uploads/2013/07/632877C9-2462-41D6-BD0E-F7317E4C42AC.jpg">

  *CSS* 注释：
  #+BEGIN_SRC css
    /* comment */
  #+END_SRC

* CSS 选择器
  + *CSS 元素选择器*
    #+BEGIN_SRC css
      html {color:black;}
    #+END_SRC

    *元素选择器* 通过 *HTML 元素* 进行选择。

  + *CSS 选择器分组*
    #+BEGIN_SRC css
      body, h2, p, table, th, td, pre, strong, em {color:gray;}
    #+END_SRC

    可以将任意多个 *选择器* 可以分组在一起， 每个选择器之间使用 *逗号* 分隔。

    可以使用 *通配符选择器* 匹配所有元素：
    #+BEGIN_SRC css
      * {color:red;}
    #+END_SRC

  + *CSS 类选择器*
    #+BEGIN_SRC css
      *.important {color:red;}
      .important {color:red;}
      p.important {color:red;}
    #+END_SRC
    
    *类选择器* 根据 *HTML* 元素的 *class* 属性进行匹配， **.import* 和 *.import* 是等价的。

    *p.import* 只匹配 *class* 的值为 *import* 的 *p* 元素。

    通过把两个类选择器链接在一起， 仅可以选择 *同时包含这些类名* 的元素(类名的顺序不限).
    #+BEGIN_SRC css
      .important.urgent {background:silver;}
    #+END_SRC

    可以匹配以下元素：
    #+BEGIN_SRC html
      <p class="important urgent warning">
        This paragraph is a very important and urgent warning.
      </p>
    #+END_SRC

  + *CSS ID 选择器*
    #+BEGIN_SRC css
      *#intro {font-weight:bold;}
      #intro {font-weight:bold;}
    #+END_SRC

    *ID 选择器* 根据 *HTML* 元素的 *id* 属性进行匹配。

    *注:* *类选择器* 和 *ID 选择器* 区分大小写

  + *CSS 属性选择器*
    #+BEGIN_SRC css
      img[alt] {border: 5px solid red;}
    #+END_SRC

    ☞ [[http://www.w3school.com.cn/css/css_selector_attribute.asp][CSS 属性选择器详解]]

  + *CSS 后代选择器*
    #+BEGIN_SRC css
      h1 em {color:red;}
    #+END_SRC

    *后代选择器* 根据上下文匹配元素， 示例代码匹配 *h1* 元素后代的 *em* 元素。

    ☞ [[http://www.w3school.com.cn/css/css_selector_descendant.asp][CSS 后代选择器]]

  + *CSS 子元素选择器*
    #+BEGIN_SRC css
      h1 > strong {color:red;}
    #+END_SRC

    *子元素选择器* 选择指定元素的 *子元素*, *后代选择器* 包含 *子元素选择器*.

    ☞ [[http://www.w3school.com.cn/css/css_selector_child.asp][CSS 子元素选择器]]

  + *CSS 相邻兄弟选择器*
    #+BEGIN_SRC css
      h1 + p {margin-top:50px;}
    #+END_SRC

    *相邻兄弟选择器* 可选择紧接在指定元素后的元素， 且二者有 *相同父元素*.

    ☞ [[http://www.w3school.com.cn/css/css_selector_adjacent_sibling.asp][CSS 相邻兄弟选择器]]

* CSS 伪类和伪元素
  *伪类* 的语法为：
  #+BEGIN_SRC css
    selector:pseudo-class {property:value;}
  #+END_SRC

  常用伪类有：
  |--------------+----------------------------------------|
  | 伪类         | 描述                                   |
  |--------------+----------------------------------------|
  | :active      | 向被激活的元素添加样式                 |
  | :focus       | 向拥有键盘输入焦点的元素添加样式       |
  | :hover       | 当鼠标悬浮在元素上方时，向元素添加样式 |
  | :link        | 向未被访问的链接添加样式               |
  | :visited     | 向已被访问的链接添加样式               |
  | :first-child | 向元素的第一个子元素添加样式           |
  | :lang        | 向带有指定 lang 属性的元素添加样式     |
  |--------------+----------------------------------------|

  *伪元素* 的语法为：
  #+BEGIN_SRC css
    selector:pseudo-element {property:value;}
  #+END_SRC

  常用的伪元素有：
  |---------------+--------------------------------|
  | 伪元素        | 描述                           |
  |---------------+--------------------------------|
  | :first-letter | 向文本的第一个字母添加特殊样式 |
  | :first-line   | 向文本的首行添加特殊样式       |
  | :before       | 在元素之前添加内容             |
  | :after        | 在元素之后添加内容             |
  |---------------+--------------------------------|

* CSS 盒子模型
  *CSS 盒子模型* 本质上是一个盒子， 封装周围的 HTML 元素， 它包括： 边距、 边框、 填充、 和实际内容。

  #+HTML: <img src="http://www.runoob.com/images/box-model.gif">

  + *Margin(外边距)* - 清除边框外的区域，外边距是透明的。
  + *Border(边框)* - 围绕在内边距和内容外的边框。
  + *Padding(内边距)* - 清除内容周围的区域，内边距是透明的。
  + *Content(内容)* - 盒子的内容，显示文本和图像。

  *CSS 轮廓(outline)* 可以在 *边框* 的边缘外围绘制一条线。

* CSS 显示与可见性
  + [[http://www.runoob.com/css/css-display-visibility.html][CSS Display(显示) 与 Visibility（可见性）]]

* CSS 定位
  *CSS 定位方式* 通过 *position* 属性指定。

  *CSS 相对定位*:
  #+HTML: <img src="http://www.w3school.com.cn/i/ct_css_positioning_relative_example.gif">

  *CSS 绝对定位*:
  #+HTML: <img src="http://www.w3school.com.cn/i/ct_css_positioning_absolute_example.gif">

  *CSS 浮动*: [[http://www.w3school.com.cn/css/css_positioning_floating.asp][w3school - CSS 浮动]]

* CSS 媒体类型
  媒体类型允许你指定文件将如何在不同媒体呈现。

  #+BEGIN_SRC css
    @media screen {
        p.test {font-family:verdana,sans-serif;font-size:14px;}
    }

    @media print {
        p.test {font-family:times,serif;font-size:10px;}
    }

    @media screen, print {
        p.test {font-weight:bold;}
    }
  #+END_SRC
  
  部分媒体类型：
  |------------+--------------------------------------------------------|
  | 媒体类型   | 描述                                                   |
  |------------+--------------------------------------------------------|
  | all        | 用于所有的媒体设备。                                   |
  | aural      | 用于语音和音频合成器。                                 |
  | braille    | 用于盲人用点字法触觉回馈设备。                         |
  | embossed   | 用于分页的盲人用点字法打印机。                         |
  | handheld   | 用于小的手持的设备。                                   |
  | print      | 用于打印机。                                           |
  | projection | 用于方案展示，比如幻灯片。                             |
  | screen     | 用于电脑显示器。                                       |
  | tty        | 用于使用固定密度字母栅格的媒体，比如电传打字机和终端。 |
  | tv         | 用于电视机类型的设备。                                 |
  |------------+--------------------------------------------------------|

* CSS 供应商前缀
  + [[https://stackoverflow.com/questions/18083056/css-what-are-moz-and-webkit][CSS What are -moz- and -webkit- ?]]

  |---------+----------------|
  | 前缀    | 供应商         |
  |---------+----------------|
  | -webkit | Chrome, Safari |
  | -moz    | Firefox        |
  | -o      | Opera          |
  | -ms     | IE             |
  |---------+----------------|
  
