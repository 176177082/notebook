* 自动内存管理机制
** 内存区域和内存溢出异常
   运行时数据区：
   + 程序计数器，可以看做当前线程锁执行的字节码的行号指示器
   + 虚拟机栈，包括局部变量表、操作数栈、动态链接、方法出口等信息
   + 本地方法栈
   + 堆，从垃圾回收角度来说可以细分为新生代和老年代
   + 方法区，各个线程共享的区域，存储虚拟机加载的类信息、常量、静态变量、即时编译后的代码等数据。这个区有时也被称为永久代
     + 运行时常量池：String.intern 方法就是将字符串放入了这个区域

   对象的创建过程：
   1. 首先去检查 new 指令的参数是否能在常量池中定位到一个类的符号引用
   2. 检查这个类是否已被加载、解析、初始化过
   3. 如果没有就执行相应的类加载过程
   4. 在类加载检查通过后，就将为新生对象分配内存
   5. 将分配到的内存空间都初始化为 0，不包括对象头
   6. 对对象进行必要的设置，比如：对象是哪个类的实例、如何找到元数据信息等

   对象的内存布局：对象头、实例数据、对齐填充。

