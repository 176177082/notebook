* 想法
  #+BEGIN_SRC python
    # -*- coding: utf-8 -*-

    import json


    __registry__ = {}


    def register(clazz):
        return __registry__.setdefault(clazz.__name__, clazz)


    class PickleJsonEncoder(json.JSONEncoder):
        def default(self, obj):
            if hasattr(obj, '__getstate__'):
                return {
                    '_type': obj.__class__.__name__,
                    'value': obj.__getstate__()
                }
            return json.JSONEncoder.default(self, obj)


    class PickleJsonDecoder(json.JSONDecoder):
        def __init__(self, *args, **kwargs):
            json.JSONDecoder.__init__(self,  object_hook=self.object_hook, *args, **kwargs)

        def object_hook(self, obj):
            if '_type' in obj:
                clazz = __registry__.get(obj['_type'])
                if clazz is not None:
                    new_obj = clazz.__new__(clazz)
                    new_obj.__setstate__(obj['value'])
                    return new_obj
            return obj


    if __name__ == '__main__':
        @register
        class Test(object):
            def __init__(self, name):
                self.name = name

            def __getstate__(self):
                return self.__dict__

            def __setstate__(self, state):
                self.__dict__.update(state)

            def __repr__(self):
                return 'Test: %s' % self.name

        obj = [Test(i) for i in range(10)]
        s = json.dumps(obj, cls=PickleJsonEncoder)
        new_obj = json.loads(s, cls=PickleJsonDecoder)
        print(s)
        print(new_obj)

  #+END_SRC
  
  #+BEGIN_SRC python
    class objectEncoder(json.JSONEncoder):
        def deafult(self, obj):
            if hasattr(obj, '__slots__'):
                ...
            else:
                return obj.__dict__
  #+END_SRC
* 相关链接
  + [[https://stackoverflow.com/questions/6578986/how-to-convert-json-data-into-a-python-object][How to convert JSON data into a Python object - Stack Overflow]]

