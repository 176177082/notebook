* use-package
  + [[https://phenix3443.github.io/notebook/emacs/modes/use-package-manual.html][use-package manual]]


* package-manager
  + [[https://wikemacs.org/wiki/Package.el][Package.el - WikEmacs]] 已下载的包
    (package-initialize) 在高版本的 emacs 中似乎不需要调用了，用于加载已经下载的包。
    [[https://emacs-china.org/t/topic/4088/6][在init.el开头调用(package-initialize)有什么问题？ - Emacs-general - Emacs China]]


* compile
  + [[https://www.emacswiki.org/emacs/CompiledFile][EmacsWiki: Compiled File]]

* load-path
  通过 package.el 和 add-to-list 添加的 path 会放在 path 前面，即在内置 path 的前面，因此通过这种方式添加的 org-plus-contrib 能够先被加载。

  通过 normal-top-level-add-subdirs-to-load-path 添加的是在后面，内置的会被先加载。

  可以通过这种方式加载：
  #+begin_src elisp
    (defun emacsc/add-subdirs-to-load-path (dir)
      "Recursive add directories to `load-path'."
      (let ((default-directory (file-name-as-directory dir))
            (orig-load-path load-path))
        (setq load-path (cons dir nil))
        (normal-top-level-add-subdirs-to-load-path)
        (nconc load-path orig-load-path)
        (delete-dups load-path)))
  #+end_src


* load
  load 加载的一般方式为：
  #+begin_example
    filename.elc -> filename.el -> filename.ext -> filename

    filename.gz
  #+end_example

  require 在 feature 中没找到时，会调用 load 去加载。

  参考：
  + [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Loading.html#Loading][Loading]]


