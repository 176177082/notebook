#+TITLE:      放在角落的一些收集

* 目录                                                    :TOC_4_gh:noexport:
- [[#python][Python]]
- [[#正则分解][正则分解]]

* Python
  + 单元测试工具 Tox - [[http://wsfdl.com/python/2015/02/01/Python%25E7%259A%2584%25E6%25B5%258B%25E8%25AF%2595%25E4%25B9%258BTox.html][Python 的单元测试之 Tox]]
  + 打包和发布 - [[http://wsfdl.com/python/2015/09/06/Python%E5%BA%94%E7%94%A8%E7%9A%84%E6%89%93%E5%8C%85%E5%92%8C%E5%8F%91%E5%B8%83%E4%B8%8A.html][Python application 的打包和发布]]

* 正则分解
  #+BEGIN_SRC python
    # -*- coding: utf-8 -*-

    class BreakDown(object):
        def __init__(self, regex):
            self.groups = [regex]
            self.regex = regex
            self.index = 0
            self.boundary = len(regex)

        def parse(self):
            while self.index < self.boundary:
                if self.peek() == '\\':
                    self.next()
                elif self.peek() == '(':
                    self.append()
                self.next()
            return self.groups


        def next(self):
            self.index += 1

        def peek(self):
            return self.regex[self.index]

        def append(self):
            index, boundary = self.index, self.boundary

            left_brackets_count = 0
            group_string = index * ' '
            while index < boundary:
                group_string += self.regex[index]

                if self.regex[index] == '\\':
                    group_string += self.regex[index + 1]
                    index += 1

                elif self.regex[index] == '(':
                    left_brackets_count += 1

                elif self.regex[index] == ')' and left_brackets_count == 1:
                    break

                index += 1
            self.groups.append(group_string)


    if __name__ == '__main__':
        import sys

        i, b = 0, BreakDown(sys.argv[1])
        for group in b.parse():
            print('%d: %s' % (i, group))
            i += 1
  #+END_SRC
