* Future
  + forever - pm2 - supervisor - systemd(阮一峰)

** 函数式编程
   + [[https://juejin.im/post/5d6a3e9751882505877272a7][神奇的lambda表达式——函数式编程必学 - 掘金]]
   + [[http://www.unicornsummer.com/blog/2014-08/lambda.html][Lambda 算子]]
   + [[https://juejin.im/post/5af13664f265da0ba266efcf][大佬，JavaScript 柯里化，了解一下？ - 掘金]]

** Components
   + [[http://www.ruanyifeng.com/blog/2019/08/web_components.html][Web Components 入门实例教程 - 阮一峰的网络日志]]

** 跨域
   + [[http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html][浏览器同源政策及其规避方法 - 阮一峰的网络日志]]

* Trace
  + 监听 click 事件，进行追踪
    #+begin_src js
      import axios from 'axios'

      const HEADER_FROM_PAGE = 'X-From-Page'
      const HEADER_FROM_PATH = 'X-From-Path'

      let _trace = {}

      window._trace = function(xpath) {
        let result = document.evaluate(xpath, document)
        for (let node = result.iterateNext(); node !== null; node = result.iterateNext()) {
          node.style.outline = '3px solid #' + (~~(Math.random() * (1 << 24))).toString(16)
        }
      }

      function getPathTo(element) {
        if (element.tagName === 'HTML') {
          return '/HTML'
        }
        if (element === document.body) {
          return '/HTML/BODY'
        }

        let ix = 0
        let siblings = element.parentNode.childNodes
        for (let i = 0; i < siblings.length; i++) {
          let sibling = siblings[i]
          if (sibling === element) {
            return getPathTo(element.parentNode) + '/' + element.tagName + '[' + (ix + 1) + ']'
          }
          if (sibling.nodeType === 1 && sibling.tagName === element.tagName) {
            ix++
          }
        }
      }

      function bodyClickListener(event) {
        if (event instanceof MouseEvent) {
          _trace[HEADER_FROM_PATH] = `${event.x}.${event.y}.${btoa(getPathTo(event.target))}.${event.timeStamp}`
        }
      }

      function requestInterceptor(requestConfig) {
        requestConfig.headers[HEADER_FROM_PAGE] = window.location.pathname
        requestConfig.headers[HEADER_FROM_PATH] = _trace[HEADER_FROM_PATH]
        return requestConfig
      }

      export function applyTrace() {
        document.body.addEventListener('click', bodyClickListener, true)
        axios.interceptors.request.use(requestInterceptor)
      }
    #+end_src
  + 相关：
    + JS 事件机制
    + XPATH 路径获取
    + axios 拦截器
  + [[https://segmentfault.com/a/1190000007623810][JS中的事件顺序(事件捕获与冒泡) - Yoomin的前端学习笔记 - SegmentFault 思否]]
  + [[https://stackoverflow.com/questions/2631820/how-do-i-ensure-saved-click-coordinates-can-be-reloaed-to-the-same-place-even-i/2631931#2631931][javascript - How do I ensure saved click coordinates can be reloaed to the same place, even if the page layout changed? - Stack Overflow]]


