#+TITLE:      Git 笔记

* 目录                                                    :TOC_4_gh:noexport:
- [[#github-fork-的更新][github fork 的更新]]
  - [[#给-fork-配置一个-remote][给 fork 配置一个 remote]]
  - [[#同步-fork][同步 fork]]
- [[#克隆非-master-分支][克隆非 master 分支]]
- [[#大小写敏感][大小写敏感]]
- [[#本地分支提交][本地分支提交]]
- [[#远程操作][远程操作]]
- [[#diff][diff]]
- [[#空提交][空提交]]
- [[#分支重命名][分支重命名]]
- [[#使用子模块][使用子模块]]

* github fork 的更新
** 给 fork 配置一个 remote
   ~git remote add upstream sourse~

   remote 查看:
   ~git remote -v~

** 同步 fork
   + 从上游仓库 fetch 分支和提交点, 传送到本地, 
     并会被存储在一个本地分支 upstream/master
     ~git fetch upstream~

   + 切换到本地主分支:
     ~git co master~

   + 把 upstream/master 分支合并到本地 master 上
     ~git merge upstream/master~

* 克隆非 master 分支
  + 查看远程分支:
    ~git branch -r #查看远程分支~

    或

    ~git branch -a #查看所有分支~

  + 克隆分支:
    ~git checkout -b branch~
    
* 大小写敏感
  #+BEGIN_EXAMPLE
  git config core.ignorecase false  # 设置大小写敏感
  # 修改文件名为小写
  git rm -r --cached .  # 从版本库删除大写文件
  git push ...
  #+END_EXAMPLE

* 本地分支提交
  1. git fetch origin
  2. git push

* 远程操作
  + [[http://www.ruanyifeng.com/blog/2014/06/git_remote.html][阮一峰博客]]

* diff
  ~git diff 低版本 高版本~, 高版本相对低版本做出的修改

* 空提交
  #+BEGIN_SRC bash
    $ git commit --allow-empty -m "Empty"
  #+END_SRC

* 分支重命名
  #+BEGIN_SRC bash
    $ git branch -m <oldname> <newname>
  #+END_SRC
* 使用子模块
  添加子模块: ~git submodule add~

  子模块的添加会产生一个特殊文件： ~.gitmodules~.

  + [[https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97][Git 工具 - 子模块]]
