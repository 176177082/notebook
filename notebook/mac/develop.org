#+TITLE:      开发相关

* 目录                                                    :TOC_4_gh:noexport:
- [[#怎样在-mac-上安装-java-8][怎样在 Mac 上安装 Java 8]]
- [[#如何配置-mac-的-java_home][如何配置 Mac 的 JAVA_HOME]]
- [[#解决-homebrew-下载更新极慢的问题][解决 Homebrew 下载更新极慢的问题]]
- [[#command-line-tools][Command Line Tools]]
- [[#命令的区别][命令的区别]]
- [[#charles-的使用问题][charles 的使用问题]]
- [[#npm-指令老是提示没有权限的问题][npm 指令老是提示没有权限的问题]]
- [[#命令行获取-cpu-信息][命令行获取 CPU 信息]]
- [[#设置-emacs-为-git-message-的编辑器][设置 emacs 为 git message 的编辑器]]
- [[#通过-homebrew-安装程序时如何指定编译参数][通过 Homebrew 安装程序时如何指定编译参数]]

* 怎样在 Mac 上安装 Java 8
  首先安装工具 Homebrew，通过如下指令完成：
  #+begin_src bash
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  #+end_src

  然后通过如下指令安装指定版本的 Java：
  #+begin_src bash
    brew tap adoptopenjdk/openjdk

    brew cask install adoptopenjdk8
    brew cask install adoptopenjdk9
    brew cask install adoptopenjdk10
    brew cask install adoptopenjdk11
  #+end_src

  参考链接：
  + [[https://stackoverflow.com/questions/24342886/how-to-install-java-8-on-mac][macos - How to install Java 8 on Mac - Stack Overflow]]

* 如何配置 Mac 的 JAVA_HOME
  下载安装 Java 后通过如下指令获取到虚假的 JAVA_HOME 路径：
  #+begin_src bash
    /usr/libexec/java_home
  #+end_src
  
  然后进入 ~/Library/Java/JavaVirtualMachines~ 路径，再次调用该指令就可以获取到真实的路径了。

* 解决 Homebrew 下载更新极慢的问题
  直接使用清华镜像就可以了，简单直接：
  #+begin_src bash
    git -C "$(brew --repo)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git

    git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git

    git -C "$(brew --repo homebrew/cask)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git

    brew update

    echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles' >> ~/.bash_profile
  #+end_src

  参考：
  + [[https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/][Homebrew | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror]]
  + [[https://mirrors.tuna.tsinghua.edu.cn/help/homebrew-bottles/][Homebrew Bottles | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror]]

* Command Line Tools
  MacOS 中的 Command Line Tools 是 XCode IDE 的子集，包含了一些常用的命令行工具，安装方式：
  #+begin_src bash
    xcode-select --install
  #+end_src

  安装的位置位于：
  #+begin_example
    /Library/Developer/CommandLineTools/
  #+end_example

* 命令的区别
  MacOS 中的一些命令虽然和 Linux 上的一样，但是它们还是存在一些区别的。这时，可以考虑 [[https://www.gnu.org/software/coreutils/][Coreutils - GNU core utilities]]。

  + [[https://stackoverflow.com/questions/24332942/why-awk-script-does-not-work-on-mac-os-but-works-on-linux][macos - Why awk script does not work on Mac OS but works on Linux? - Stack Overflow]]
    #+begin_src bash
      brew install gawk
    #+end_src

* charles 的使用问题
  1. 使用网易 mumu 模拟器时和 charles 存在冲突，解决方案为设置对 ~10.0.2.2,mumu.nie.netease.com,graph.facebook.com~ 这些网址不设置代理，参考：
     + [[http://bbs.mumu.163.com/forum.php?mod=viewthread&tid=1087023][macOS 下用 charles 抓包，模拟器里面打不了字 - 问答专区 - 网易MuMu论坛]]

* npm 指令老是提示没有权限的问题
  一般情况下，npm 相关指令都是安装在 ~/usr/local~ 这个目录下的，因此可以执行如下指令：
  #+begin_example
    $ sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}
  #+end_example

  参考：
  + [[https://stackoverflow.com/questions/47252451/permission-denied-when-installing-npm-modules-in-osx][node.js - Permission denied when installing npm modules in OSX - Stack Overflow]]

* 命令行获取 CPU 信息
  在 Unix/Linux 系统中 sysctl 命令被用于在内核运行时动态地修改内核的运行参数，而在 Mac 中，是可以用 sysctl 目录来查看 CPU 信息的：
  #+begin_src bash
    sysctl machdep.cpu                  # 查看所有信息
    sysctl -n machdep.cpu.brand_string  # 显示 CPU 型号
    sysctl -n machdep.cpu.core_count    # 显示 CPU 核心数
    sysctl -n machdep.cpu.thread_count  # 显示线程数
  #+end_src

* 设置 emacs 为 git message 的编辑器
  通常情况下可以用 ~emacsclient~ 作为编辑器，这时，编辑器的配置为：
  #+begin_src conf
    editor = "/usr/local/bin/emacsclient -c"
  #+end_src

* 通过 Homebrew 安装程序时如何指定编译参数
  可以通过 ~brew options formula~ 的方式来获取支持的编译参数，使用时直接在后面添加就可以了，比如：
  #+begin_src bash
    $ brew upgrade emacs-mac --with-modules
  #+end_src

