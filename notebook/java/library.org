#+TITLE:      Java 常用第三方库

* 目录                                                    :TOC_4_gh:noexport:
- [[#apache-poi][Apache POI]]
- [[#guava][Guava]]
  - [[#caches][Caches]]
- [[#http-client][Http Client]]
- [[#fastjson][fastjson]]

* Apache POI
  Java 中常用 Apache POI 来操作 Excel 文档，相关问题：
  + HSSF、XSSF 和 SXSSF 的区别是什么？
    + HSSF：是操作 Excel97-2003 版本，扩展名为 .xls
    + XSSF：是操作 Excel2007 版本开始，扩展名为 .xlsx
    + SXSSF：是在 XSSF 基础上，POI3.8 版本开始提供的一种支持低内存占用的操作方式，扩展名为 .xlsx

    参考：
    + [[https://www.cnblogs.com/pcheng/p/7485979.html][HSSF、XSSF 和 SXSSF 区别以及 Excel 导出优化 - PC 君 - 博客园]]

* Guava
** Caches
   遇到需要在内存中使用缓存的需求时，第一想法是用 LinkedHashMap 实现一个 LRU 来搞，但是考虑到线程安全的问题，还是用现成的比较好，Guava 中的缓存工具就是最直接的选择。

   Guava Cache 对象可以通过 CacheBuilder 来构造，简单的使用例子：
   #+begin_src java
     Cache<String,String> cache = CacheBuilder.newBuilder()
       .maximumSize(23)                       // 指定最大缓存数量
       .expireAfterWrite(3,TimeUnit.SECONDS)  // 指定缓存过期时间
       .weakValues()                          // 值引用使用弱引用
       .weekKeys()                            // 键引用使用弱引用
       .removalListener(listener)             // 移除缓存时的监听器
       .build();
   #+end_src

   在构建时可以指定 ~CacheLoader~ 自动加载缓存到内存，也可以使用 ~Cache.get(key, Callable)~ 来加载。

   参考：
   + [[https://segmentfault.com/a/1190000011105644][Guava Cache 用法介绍 - 个人文章 - SegmentFault 思否]]
   + [[https://github.com/google/guava/wiki/CachesExplained][CachesExplained · google/guava Wiki]]

* Http Client
  + [[https://github.com/akullpp/awesome-java#http-clients][akullpp/awesome-java: A curated list of awesome frameworks, libraries and software for the Java programming language.]]
  + [[https://liudanking.com/sitelog/java-http-client-lib-comparison/][Java HTTP 组件库选型看这篇就够了 | 行思錄 | Travel Coder]]  

* fastjson
  可以通过 =JSON.parse= 简单解析 JSON 对象。
  
