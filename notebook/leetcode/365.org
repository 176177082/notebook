#+TITLE:      LeetCode - 365. 水壶问题

* 目录                                                    :TOC_4_gh:noexport:
- [[#问题描述][问题描述]]
- [[#解决方案][解决方案]]

* 问题描述
  有两个容量分别为 x 升和 y 升的水壶以及无限多的水。请判断能否通过使用这两个水壶，从而可以得到恰好 z 升的水？

  如果可以，最后请用以上水壶中的一或两个来盛放取得的 z 升水。

  你允许：
  + 装满任意一个水壶
  + 清空任意一个水壶
  + 从一个水壶向另外一个水壶倒水，直到装满或者倒空

* 解决方案
  这道问题可以转换为:

  + 有一个很大的容器，有两个杯子，容量分别为 x 和 y，通过用两个杯子往里倒水，和往出舀水，问能不能使容器中的水刚好为 z 升。

  这个问题可以用如下公式表示：
  #+BEGIN_EXAMPLE
    z = m * x + n * y
  #+END_EXAMPLE
  
  其中 m，n 为舀水和倒水的次数，正数表示往里舀水，负数表示往外倒水。

  方程式 ~z = m * x + n * y~ 可以用 [[https://zh.wikipedia.org/wiki/%25E8%25B2%259D%25E7%25A5%2596%25E7%25AD%2589%25E5%25BC%258F][裴蜀定理]] 求解：
  #+BEGIN_SRC c++
    class Solution {
     public:
      bool canMeasureWater(int x, int y, int z) {
        return z == 0 || (x + y >= z && z % gcd(x, y) == 0);
      }

      // 求取最大公约数
      int gcd(int x, int y) {
        return y == 0 ? x : gcd(y, x % y);
      }
    };
  #+END_SRC

