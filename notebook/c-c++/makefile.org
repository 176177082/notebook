#+TITLE:      C-C++ - Makefile

* 目录                                                    :TOC_4_gh:noexport:
- [[#自动化变量][自动化变量]]
- [[#make-指令][$(MAKE) 指令]]
- [[#内置函数][内置函数]]
- [[#相关链接][相关链接]]

* 自动化变量
  + $@ :: 表示规则中的目标文件集
  + $% :: 仅当目标是函数库文件中，表示规则中的目标成员名
  + $< :: 依赖目标中的第一个目标名字
  + $? :: 所有比目标新的依赖目标的集合
  + $^ :: 所有的依赖目标的集合. 如果在依赖目标中有多个重复的，那个这个变量会去除重复的依赖目标，只保留一份.
  + $+ :: 这个变量很像 *$^*, 也是所有依赖目标的集合.只是它不去除重复的依赖目标

* $(MAKE) 指令
  通过如下指令可以指定 Make 的执行目录：
  #+BEGIN_EXAMPLE
    $(MAKE) -C dirname
  #+END_EXAMPLE

* 内置函数
  + 循环函数，注意需要执行的命令尾部的分号：
    #+BEGIN_SRC makefile
      $(foreach n, $(PRG), gcc -o $(n) $(n).o;)
    #+END_SRC

    相当于：
    #+BEGIN_SRC python
      for n in $(PRG):
          gcc -o $(n) $(n).o;
    #+END_SRC
    
    同时：自动构建时列出的目标如果不在当前目录就不能直接用 for 循环得出, 即不能使用 VPATH 指定的文件找寻路径

* 相关链接
  + [[http://wiki.ubuntu.org.cn/%E8%B7%9F%E6%88%91%E4%B8%80%E8%B5%B7%E5%86%99Makefile:MakeFile%E4%BB%8B%E7%BB%8D][跟我一起写 Makefile]]
  + [[http://www.ruanyifeng.com/blog/2015/02/make.html][Make 命令教程 - 阮一峰]]

