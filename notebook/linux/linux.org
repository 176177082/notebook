#+TITLE:      Linux 基础笔记

* 目录                                                    :TOC_4_gh:noexport:
- [[#通过-man-获取帮助信息][通过 man 获取帮助信息]]
- [[#关闭系统][关闭系统]]
- [[#用户群组][用户群组]]
- [[#文件权限][文件权限]]
- [[#工作管理][工作管理]]

* 通过 man 获取帮助信息
  ~Date(1)~ 括号中的代号的含义：
  |------+--------------------------------------------------------------------|
  | 代号 | 代表内容                                                           |
  |------+--------------------------------------------------------------------|
  |    1 | 使用者在shell环境中可以操作的命令或可运行文件                      |
  |    2 | 系统核心可呼叫的函数与工具等                                       |
  |    3 | 一些常用的函数(function)与函式库(library)，大部分为C的函式库(libc) |
  |    4 | 装置文件的说明，通常在/dev下的文件                                 |
  |    5 | 配置文件或者是某些文件的格式                                       |
  |    6 | 游戏(games)                                                        |
  |    7 | 惯例与协议等，例如Linux文件系统、网络协议、ASCII code等等的说明    |
  |    8 | 系统管理员可用的管理命令                                           |
  |    9 | 跟kernel有关的文件                                                 |
  |------+--------------------------------------------------------------------|

  指定代号： ~man 1 date.~

  ~map page~ 的快捷键：
  |-------------+----------------------------------------------------------------------|
  | 按键        | 进行工作                                                             |
  |-------------+----------------------------------------------------------------------|
  | 空格键      | 向下翻一页                                                           |
  | [Page Down] | 向下翻一页                                                           |
  | [Page Up]   | 向上翻一页                                                           |
  | [Home]      | 去到第一页                                                           |
  | [End]       | 去到最后一页                                                         |
  | /string     | 向『下』搜寻 string 这个字符串，如果要搜寻 vbird 的话，就输入 /vbird |
  | ?string     | 向『上』搜寻 string 这个字符串                                       |
  | n, N        | 下一个/上一个 匹配结果                                               |
  | q           | 退出                                                                 |
  |-------------+----------------------------------------------------------------------|

  ~man -f <name>~ 获取命令 ~name~ 拥有的代号：
  #+BEGIN_EXAMPLE
    $ main -f main
    man (1)              - an interface to the on-line reference manuals
    man (7)              - macros to format man pages
  #+END_EXAMPLE

* 关闭系统
  命令 ~sync~ 将缓存在内存中的数据写入磁盘，命令 ~shutdown/reboot/halt~ 等会自动执行 ~sync~ 命令。

  *shutdown* 的指令格式为：
  #+BEGIN_EXAMPLE
    shutdown [-t 秒] [-arkhncfF] 时间 [警告信息] 
  #+END_EXAMPLE
  
  常用选项：
  |------+------------------------------------|
  | 选项 | 作用                               |
  |------+------------------------------------|
  | ~-h~   | 将系统的服务停掉后，立即关机       |
  | ~-r~   | 在将系统的服务停掉之后就重新启动   |
  | ~-c~   | 取消已经在进行的 shutdown 命令内容 |
  |------+------------------------------------|

  例子：
  #+BEGIN_EXAMPLE
    [root@www ~]# shutdown -h now 
    立刻关机，其中 now 相当于时间为 0 的状态 
    [root@www ~]# shutdown -h 20:25 
    系统在今天的 20:25 分会关机，若在21:25才下达此命令，则隔天才关机 
    [root@www ~]# shutdown -h +10 
    系统再过十分钟后自动关机 
    [root@www ~]# shutdown -r now 
    系统立刻重新启动 
    [root@www ~]# shutdown -r +30 'The system will reboot'  
    再过三十分钟系统会重新启动，并显示后面的信息给所有在在线的使用者 
  #+END_EXAMPLE

* 用户群组
  ~Linux~ 中，任何一个文件都具有 [User, Group, Other] 三种身份的个别权限，代表：
  文件拥有者，拥有者所在群组，其他人。

  默认的情况下，所有的系统上的账号与一般身份使用者，还有 root 的相关信息，都是记录在 ~/etc/passwd~ 文件内。

  个人的密码则是记录在 ~/etc/shadow~ 这个文件下。
  
  Linux 所有的组名都纪录在 ~/etc/group~ 内

* 文件权限
  使用 ~ls -l~ 得到的输出：
  #+BEGIN_EXAMPLE
    -rw-r--r-- 1 root root  728 Sep  3 12:25 .vimrc
  #+END_EXAMPLE

  结果分为七个字段，分别的含义为：
  + 第一个字段 ~-rw-r--r--~ 代表文件的类型和权限，其中：
    - 第一个字符代表文件类型
      |------+------------------------------|
      | 字符 | 对应的文件类型               |
      |------+------------------------------|
      | ~d~    | 目录                         |
      | ~-~    | 文件                         |
      | ~l~    | 链接文件，如：符号链接       |
      | ~b~    | 接口设备                     |
      | ~c~    | 串行端口设备，如：键盘、鼠标 |
      |------+------------------------------|
    - 剩下的字符三个一组，均为 ~rwx~ 的三个参数的组合。分别为：文件拥有者、同群组成员、其他人的权限。
      其中： *r - 可读*, *w - 可写*, *x - 可执行*.
  + 第二个字段 ~1~ 表示有多少档名连结到此节点
  + 第三个字段 ~root~ 表示这个文件的拥有者账号
  + 第四个字段 ~root~ 表示这个文件的所属群组
  + 第五个字段 ~728~ 表示文件的大小，单位默认为字节
  + 第六个字段 ~Sep 3 12:25~ 表示文件最后一次修改的日期
  + 第七个字段 ~.vimrc~ 表示文件名

  *改变所属群组 - chgrp*:
  #+BEGIN_EXAMPLE
    $ chgrp <group> <file>
  #+END_EXAMPLE

  *改变文件拥有者 - chown*
  #+BEGIN_EXAMPLE
    $ chown <user> <file>
    $ chown <user>:<group> <file>
  #+END_EXAMPLE

  *改变权限 - chmod*
  
  使用数字类型改变文件权限，不同的权限有一个分数：
  #+BEGIN_EXAMPLE
    r:4
    w:2
    x:1
  #+END_EXAMPLE
  
  每种身份的权限分数为各自的三个权限分数相加的和，比如：
  #+BEGIN_EXAMPLE
    owner = rwx = 4+2+1 = 7
    group = rwx = 4+2+1 = 7
    others= --- = 0+0+0 = 0
  #+END_EXAMPLE

  权限变更就可以这样：
  #+BEGIN_EXAMPLE
    $ chmod 770 filename
  #+END_EXAMPLE

  使用符号类型改变文件权限需要遵循一定的语法：
  #+BEGIN_EXAMPLE
    $ chmod [ugoa][+-=][rwx],... filename
  #+END_EXAMPLE

  *u, g, o* 代表文件拥有者、群组、其他人。 *a* 代表所有。

  *+, -, =* 代表添加、删除、设置。

  例如：
  #+BEGIN_EXAMPLE
    $ chmod u=rwx,go=rx .bashrc
  #+END_EXAMPLE

  使得：
  + 拥有者具有可读、可写、可执行的权限
  + 群组和其他人具有可读与执行的权限

* 工作管理
  ~shell~ 中运行的程序可以分为 *前景运行* 和 *背景运行*.

  *前景* 中运行的程序可以通过 ~Ctrl-C~ 停止运行，而 *背景* 中的不行。

  *背景* 中运行的程序可以分为 『暂停 (stop)』与『运行中 (running)』 两种状态。

  让程序在背景中运行的方式：
  1. 在命令尾部添加字符 ~&~:
     #+BEGIN_EXAMPLE
       tar -zpcf /tmp/etc.tar.gz /etc &
     #+END_EXAMPLE

  2. 将目前的工作丢到背景暂停 ~Ctrl-Z~:

  命令 ~jobs~ 可以查看目前的背景工作状态。

  命令 ~fg~ 可以将背景中的工作拿到前景中来运行，可以指定工作号。

  命令 ~bg~ 可以让在背景中暂停的工作运行。

  命令 ~kill~ 可以用在终止程序的运行，信号 ~-9~ 强制终止，信号 ~-15~ 正常结束。

  ~kill~ 的参数可以是 ~PID~ 或者 ~%jobnumber~.

  命令 ~nohub~ 让程序可以离线运行。

