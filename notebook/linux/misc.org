#+TITLE:      Misc

* 目录                                                    :TOC_4_gh:noexport:
- [[#cron-表达式][Cron 表达式]]
- [[#tmpfs][tmpfs]]
- [[#xdg-user-directories][XDG user directories]]
- [[#窗口管理器到桌面环境][窗口管理器到桌面环境]]

* Cron 表达式
  Linux 中常常通过 Cron 来定义定时任务，而 Cron 表达式也渐渐变得不局限于 Linux 中，很多定时任务的框架都集成了这一语法。

  一个 Cron 表达式最少有 5 个空格来分割时间元素，总共有 7 个元素，包括：
  |------+------+----------+--------------------+---------------|
  | 序号 | 说明 | 是否必填 |       允许填写的值 | 允许的通配符  |
  |------+------+----------+--------------------+---------------|
  |    1 | 秒   | 是       |               0-59 | , - * /       |
  |    2 | 分   | 是       |               0-59 | , - * /       |
  |    3 | 时   | 是       |               0-23 | , - * /       |
  |    4 | 日   | 是       |               1-31 | - * ? / L W   |
  |    5 | 月   | 是       |    1-12 or JAN-DEC | , - * /       |
  |    6 | 周   | 是       |     1-7 or SUN-SAT | , - * ? / L # |
  |    7 | 年   | 否       | empty 或 1970-2099 | , - * /       |
  |------+------+----------+--------------------+---------------|

  允许填写的值的类型：
  + 一个具体的值，如 6
  + 一个连续区间，如 9-12
  + 一个间隔时间，如秒 0/5 表示从 0 秒开始，每隔 5 秒执行一次
  + 一个列表，如 1,3,5，表示第 1,3,5 时间执行
  + 一个通配符，常用的如 ~*~ 代表所有值，每一秒、每一分之类的

  参考：
  + [[https://www.jianshu.com/p/6b8341cf3311][Cron 表达式详解 - 简书]]

* tmpfs
  tmpfs 是一个临时文件系统，驻留在内存中，因为是在内存里，所以读写非常快，可以提供较高的访问速度。
  
  参考：
  + [[https://segmentfault.com/a/1190000014737366][tmpfs 详解 - 个人文章 - SegmentFault 思否]]

* XDG user directories
  用户目录指位于 $HOME 下的一系列常用目录，例如 Documents，Downloads，Music，还有 Desktop。用户目录会在文件管理器中显示为不同的图标，且被多种应用程序所参照。

  可以使用 ~xdg-user-dirs~ 自动生成这些目录：
  #+begin_src bash
    $ xdg-user-dirs-update
  #+end_src

  运行后该命令还会自动地：
  + 创建一个本地的 ~~/.config/user-dirs.dirs~ 配置文件，应用程序通过它来查找使用特定帐号指定的用户目录
  + 创建一个本地的 ~~/.config/user-dirs.locale~ 配置文件，根据使用的 locale 指定语言

  参考：
  + [[https://wiki.archlinux.org/index.php/XDG_user_directories_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)][XDG user directories (简体中文) - ArchWiki]]

* 窗口管理器到桌面环境
  X 窗口系统是 MIT 1984 年提出的以位图图像显示图形化界面的一套软件规范及协议，是目前 Linux 下使用最多的窗口系统，最广的软件实现是 Xorg。

  X Window System 使用 C/S 架构，服务端和客户端可以基于网络通信，客户端(也就是各种软件)将绘图请求发给服务端，服务端操纵显卡或视频终端把位图图像绘制出来，并处理键盘鼠标的事件，发送给客户端。
  需要注意的是，直接和人交互的是服务端。

  而为了方便编写 GUI 程序，程序员开发出 GTK、QT 这种图形库，这些图形库作为 X Window 的客户端工作。

  为了管理众多的窗口在屏幕上的显示，需要窗口管理器(Window manager)。窗口管理器可以实现一个屏幕上显示多个 X 程序，实现调整程序大小、标题栏、最大化、最小化、关闭按钮和虚拟桌面这些功能。

  为了实现窗口之间的特效，还需要窗口合成器，窗口合成器可以制造半透明之类的特效。

  Linux 还有一个组件叫显示管理器（display manager），用于开机后显示登陆界面，并启动窗口管理器等 X 组件。没有显示管理器，Linux 开机会显示命令行登陆界面，需要使用命令行登陆后手动启动 X server 和窗口管理器才能显示 GUI，
  显示管理器自动的完成这些工作。

  此外为了显示桌面图标，还需要一个文件管理器。

  把窗口管理器、显示管理器、合成器、文件管理器及其他应用、主题、GTK+/QT 等图形库，连同通用的组件，比如 Xorg，进程间通信用的 Dbus 等等库或程序，打包起来，就形成当今 Linux 下的桌面环境(Desktop environment)。

  参考：
  + [[https://askubuntu.com/questions/18078/what-is-the-difference-between-a-desktop-environment-and-a-window-manager][What is the difference between a desktop environment and a window manager? - Ask Ubuntu]]
  + [[https://www.zhihu.com/question/321725817/answer/669568568][Linux 图形界面的显示原理是什么？ - 韩朴宇的回答 - 知乎]]
  + [[https://zh.wikipedia.org/wiki/X%E8%A6%96%E7%AA%97%E7%B3%BB%E7%B5%B1][X 窗口系统 - 维基百科，自由的百科全书]]
  + [[https://www.ibm.com/developerworks/cn/linux/l-cn-xwin/index.html][X Window 系统的窗口显示原理]]

