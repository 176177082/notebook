#+TITLE:      Gradle - Java 项目构建

* 目录                                                    :TOC_4_gh:noexport:
- [[#java-项目构建][Java 项目构建]]
- [[#groupid--artifactid][groupId & artifactId]]
- [[#application][application]]
- [[#初始化项目结构][初始化项目结构]]

* Java 项目构建
  使用插件 ~java~:
  #+BEGIN_SRC groovy
    apply plugin: 'java'
  #+END_SRC

  默认项目结构：
  + src/main/java - 源代码
  + src/test/java - 测试

  执行构建：
  #+BEGIN_SRC bash
    C:\> gradle build
  #+END_SRC

  使用 ~SourceSets~ 设置项目结构：
  #+BEGIN_SRC groovy
    apply plugin: 'java'

    sourceSets {
      main {
        java {
          srcDir 'src'
        }
      }

      test {
        java {
          srcDir 'test'
        }
      }
    }
  #+END_SRC

* groupId & artifactId
  这两个变量用于保证项目的唯一性， ~groupId~ 通常由多段组成。

  当只有两段时，第一段为 *域*, 第二段为 *拥有者*.

  *域*:
  + org :: 非营利组织
  + com :: 商业组织
  + cn :: 中国

  比如： ~cn.job.proj~, ~groupId~ 就是 ~cn.job~, ~artifactId~ 是 ~proj~.

  + [[https://maven.apache.org/guides/mini/guide-naming-conventions.html][Guide to naming conventions on groupId, artifactId, and version]]

* application
  #+BEGIN_SRC groovy
    apply plugin: 'application'
  #+END_SRC

  主要分发内容包括：
  |------------+--------------------------------|
  | 位置       | 内容                           |
  |------------+--------------------------------|
  | ~(root dir)~ | ~src/dist~                       |
  | ~lib~        | 所有运行时依赖项和主源集类文件 |
  | ~bin~        | 启动脚本                       |
  |------------+--------------------------------|

  使用 ~gradle installDist~ 将分发内容保存到指定目录。

  使用 ~gradle distZip~ 将分发内容压缩保存到指定目录。

  + [[https://docs.gradle.org/current/userguide/application_plugin.html][The Application Plugin]]
  + [[https://guides.gradle.org/building-java-applications/][Building Java Applications]]

* 初始化项目结构
  #+BEGIN_SRC bash
    $ gradle init --type <name>
  #+END_SRC

  + java-application

  + java-library
  
  + scala-library

  + groovy-library
  
  + basic
