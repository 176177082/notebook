#+TITLE:      Coding

* 目录                                                    :TOC_4_gh:noexport:
- [[#圈复杂度][圈复杂度]]

* 圈复杂度
  #+begin_quote
  圈复杂度（Cyclomatic complexity，简写 CC）也称为条件复杂度，是一种代码复杂度的衡量标准。由托马斯·J·麦凯布（Thomas J. McCabe, Sr.）于 1976 年提出，用来表示程序的复杂度，其符号为 VG 或是 M。
  它可以用来衡量一个模块判定结构的复杂程度，数量上表现为独立现行路径条数，也可理解为覆盖所有的可能情况最少使用的测试用例数。

  圈复杂度大说明程序代码的判断逻辑复杂，可能质量低且难于测试和维护。程序的可能错误和高的圈复杂度有着很大关系。
  #+end_quote

  圈复杂度的一个计算方式为判定条件的数量 + 1，通常，我们应该保持一个函数的圈复杂度在 10 以下：
  |----------+--------------+--------+----------|
  | 圈复杂度 | 代码状况     | 可测性 | 维护成本 |
  |----------+--------------+--------+----------|
  |     1-10 | 清晰、结构化 | 高     | 低       |
  |    10-20 | 复杂         | 中     | 中       |
  |    20-30 | 非常复杂     | 低     | 高       |
  |      >30 | 不可读       | 不可测 | 非常高   |
  |----------+--------------+--------+----------|

  参考：
  + [[http://kaelzhang81.github.io/2017/06/18/%E8%AF%A6%E8%A7%A3%E5%9C%88%E5%A4%8D%E6%9D%82%E5%BA%A6/][详解圈复杂度 - Tech For Fun]]

