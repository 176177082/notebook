#+TITLE:      同名标识符优先级问题

* 目录                                                    :TOC_4_gh:noexport:
- [[#同名标识符][同名标识符]]
- [[#python][Python]]
- [[#java][Java]]
- [[#c][C]]
- [[#javascript][JavaScript]]

* 同名标识符
  1. 形参和函数同名
  2. 局部变量和函数同名

* Python
  #+BEGIN_SRC python :results output
    class Test(object):
        @staticmethod
        def func(func):
            return func

        @staticmethod
        def func2():
            func2 = 10
            return func2

    print(Test.func(10))
    print(Test.func2())
  #+END_SRC

  + RESULTS:
    : 10
    : 10

* Java
  #+BEGIN_SRC java
    class Test {
      public static int func(int func) {
        return func;
      }

      public static int func() {
        int func = 10;
        return func;
      }

      public static void main(String[] args) {
        System.out.println(Test.func(10));
        System.out.println(Test.func());
      }
    }
  #+END_SRC

  + RESULTS:
    : 10
    : 10

* C
  #+BEGIN_SRC C :results output
    #include <stdio.h>

    int func(int func) {
      return func;
    }

    /* int func2(int func2) { */
    /*   int func2 = 10; */
    /*   return func2; */
    /* } */

    int main(int argc, char* argv) {
      printf("%d", func(10)/* , func2() */);
      return 0;
    }
  #+END_SRC

  + RESULTS:
    : 10

  C 语言中不能定义和函数名相同的局部变量

* JavaScript
  #+BEGIN_SRC javascript
    function func(func) {
        return func;
    }

    function func2() {
        func2 = 10;
        return func2;
    }

    console.log(func(10));
    console.log(func2());
  #+END_SRC

  + RESULTS:
    : 10
    : 10

