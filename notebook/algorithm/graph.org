#+TITLE:      Graph

* 目录                                                    :TOC_4_gh:noexport:
- [[#迪杰斯特拉算法][迪杰斯特拉算法]]

* 迪杰斯特拉算法
  Dijkstra's algorithm 用于计算一个节点到其他所有节点的最短路径，其原理很简单：
  1. 将已求出最短路径的顶点集合用 S 表示，将其余未确定最短路径的顶点集合用 U 表示
  2. 初始时，S 中只包含源点 V
  3. 从 U 中选取一个距离 V 最小的顶点 K，把 K，加入 S 中
  4. 在 S 中选择目前距离和最小的顶点 V 作为新的参考点，重复第 3 步，直到所有点都在 S 中
  5. 此时，就得到了最短路径

  需要注意的是：不能有负权边。

  #+HTML: <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/DijkstraDemo.gif/220px-DijkstraDemo.gif">

  算法的伪码实现：
  #+BEGIN_EXAMPLE
    function Dijkstra(Graph, source):

        create vertex set Q

        for each vertex v in Graph:             // Initialization
            dist[v] ← INFINITY                  // Unknown distance from source to v
            prev[v] ← UNDEFINED                 // Previous node in optimal path from source
            add v to Q                          // All nodes initially in Q (unvisited nodes)

        dist[source] ← 0                        // Distance from source to source

        while Q is not empty:
            u ← vertex in Q with min dist[u]    // Node with the least distance
                                                // will be selected first
            remove u from Q

            for each neighbor v of u:           // where v is still in Q.
                alt ← dist[u] + length(u, v)
                if alt < dist[v]:               // A shorter path to v has been found
                    dist[v] ← alt
                    prev[v] ← u

        return dist[], prev[]
  #+END_EXAMPLE

  相关链接：
  + [[https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm][Dijkstra's algorithm - Wikipedia]]

