#+TITLE:      Makefile 笔记

* 目录                                                    :TOC_4_gh:noexport:
- [[#makefile][Makefile]]
  - [[#自动化变量][自动化变量]]
  - [[#make][$(MAKE)]]
  - [[#函数][函数]]
  - [[#自动构建][自动构建]]

* Makefile
  [[http://wiki.ubuntu.org.cn/%E8%B7%9F%E6%88%91%E4%B8%80%E8%B5%B7%E5%86%99Makefile:MakeFile%E4%BB%8B%E7%BB%8D][跟我一起写Makefile]]

** 自动化变量
   - $@ :: 表示规则中的目标文件集
   - $% :: 仅当目标是函数库文件中，表示规则中的目标成员名
   - $< :: 依赖目标中的第一个目标名字
   - $? :: 所有比目标新的依赖目标的集合
   - $^ :: 所有的依赖目标的集合. 如果在依赖目标中有多个重复的，那个这个变量会去除重复的依赖目标，只保留一份.
   - $+ :: 这个变量很像"$^"，也是所有依赖目标的集合.只是它不去除重复的依赖目标
   - more :: ...

** $(MAKE)
   $(MAKE) -C dir  指定Make执行的目录

** 函数
   + 循环:
     $(foreach n, $(PRG), gcc -o $(n) $(n).o;)
     循环类似 *Python* 的循环, *n* 为每次取的值, *gcc...* 为需要执行的指令,
     考虑在指令添加分号: *；*

** 自动构建
   自动构建时列出的目标如果不在当前目录不能直接用 for 循环得出, 及不能使用:
   VPATH 指定的文件找寻路径

   即: 如果用 for 循环列出目标, 那么 for 循环列出的目标如果不在当前目录,
   那么便不能根据 VPATH 指定的路径 完成自动构建
