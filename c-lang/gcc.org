#+TITLE:      GCC 笔记

* 目录                                                    :TOC_4_gh:noexport:
- [[#常用命令行选项---gcc][常用命令行选项 - GCC]]
- [[#编译c程序][编译C程序]]
  - [[#编译选项][编译选项]]
  - [[#静态库][静态库]]
  - [[#标准选择][标准选择]]
- [[#32--64-系统][32 & 64 系统]]
- [[#应用程序图标][应用程序图标]]

* 常用命令行选项 - GCC
  + *-o*: 指定输出文件名
  + *-Wall*: 显示所有警告信息
  + *-E*: 只输出预编译结果
  + *-S*: 输出汇编代码
  + *-c*: 输出目标文件
  + *-save-temps*: 输出所有中间文件(.i, .o...)
  + *-g*: 生成供调试用的可执行文件, 可以在gdb中运行
  + *-l:* 指定所使用到的函数库
  + -L: 指定函数库所在的文件夹
  + *-I*: 指定头文件所在的文件夹

* 编译C程序
  #+CAPTIONS: 文件扩展名
  |--------+--------------------------------|
  | 扩展名 | 文件内容                       |
  |--------+--------------------------------|
  | .a     | 静态对象库                     |
  | .c     | 需要预处理的C语言源代码        |
  | .h     | C语言源代码头文件              |
  | .i     | 无需预处理的C语言头文件        |
  | .o     | 目标文件, 格式和应用的连接相符 |
  | .s     | 汇编语言代码                   |
  | .so    | 共享对象库                     |
  |--------+--------------------------------|

** 编译选项
   + *无选项*: 直接编译为可执行文件
   + *-o*: 重命名生成的文件
   + *-c*: 生成目标文件(.o)
   + *-E*: 只进行预处理操作, .i
   + *-S*: 生成汇编语言代码, .s

** 静态库
   + 静态库创建: *ar -r libname 目标文件...*

** 标准选择
   #+CAPTIONS: 编译标准
   | 选项      | 描述                          |
   |-----------+-------------------------------|
   | <l>       | <l>                           |
   |-----------+-------------------------------|
   | -ansi     | 编译标准程序, 也和GNU后缀兼容 |
   | -pedantic | 严格按照标准, 提示警告信息    |
   | -std=c89  | ISO C89 标准                  |
   | -std=c99  | ISO C99 标准                  |
   | ...       | ...                           |

* 32 & 64 系统
  + ~-m32~ 32 位系统
  + ~-m64~ 64 为系统

* 应用程序图标
  工具: windres
  步骤:
  1. 准备好图标文件: example.ico
  2. 新建扩展名为 .rc 的文本文件, 如: example.rc
  3. 添加以下内容: ~1 ICON "example.ico"~
  4. 编译文件: ~windres example.rc example.o~
  5. 编译应用程序:
     ~gcc -o app app.o example.o~
     ~g++ -o app app.o example.o~

