#+SETUPFILE:  ./_style/style.setup
#+TITLE:      JavaScript 基础

* JavaScript 基础                                         :TOC_4_gh:noexport:
- [[#javascript-使用][JavaScript 使用]]
- [[#javascript-输出][JavaScript 输出]]
- [[#javascript-语句][JavaScript 语句]]
- [[#javascript-注释][JavaScript 注释]]
- [[#javascript-变量][JavaScript 变量]]
- [[#javascript-数据类型][JavaScript 数据类型]]
- [[#javascript-对象][JavaScript 对象]]
- [[#javascript-函数][JavaScript 函数]]

* JavaScript 使用
  ~HTML~ 中的 ~JavaScript~ 必须位于 ~<script>~ 与 ~</script>~ 标签之间。

  ~HTML~ 会在加载页面时执行 ~JavaScript~ 语句。 

  外部的 ~JavaScript~: 在 ~<script>~ 标签的 ~src~ 属性中设置该 ~.js~ 文件。
  #+BEGIN_SRC html
    <script src="myScript.js"></script>
  #+END_SRC

* JavaScript 输出
  + 操作 HTML 元素 :: 可以使用 ~document.getElementById(id)~ 方法访问由 ~id~ 标识的 ~HTML~ 元素。
                  
                  *PS:* 脚本应该出现在 ~id~ 后面， 不然获取 ~id~ 元素会失败。

  + 写到文档输出 :: 使用 ~document.write()~ 方法在文档加载的过程中写入内容。 
              如果在文档已完成加载后执行 ~document.write~, 整个 ~HTML~ 页面将被覆盖。
 
* JavaScript 语句
  + [[http://www.w3school.com.cn/js/js_statements.asp][JavaScript 语句]]

* JavaScript 注释
  + [[http://www.w3school.com.cn/js/js_comments.asp][JavaScript 注释]]

* JavaScript 变量
  + *变量是存储信息的容器*
 
  #+BEGIN_SRC javascript
    // 声明创建变量
    var x = 2;
    var y = 3;
    var z = x + y;
  #+END_SRC
  
  + 变量必须以字母开头
  + 变量也能以 ~$~ 和 ~_~ 符号开头
  + 变量名称对大小写敏感
    
  *PS:* ~JavaScript~ 语句和 ~JavaScript~ 变量都对大小写敏感

  + 可以在一条语句中声明多个变量， 使用 *逗号* 分隔

  + 未使用值来声明的变量， 其值实际上是 ~undefined~
    #+BEGIN_SRC javascript
      var name;
    #+END_SRC

  + 如果重新声明 ~JavaScript~ 变量，该变量的值不会丢失：
    #+BEGIN_SRC javascript
      var name = 'name';
      var name;  // name 的值依然为 'name'
    #+END_SRC

* JavaScript 数据类型
  #+BEGIN_SRC javascript
    // 字符串 String
    var name = 'name';
    var name = "name";

    // 字符串中使用引号
    var name = "'name'";
    var name = '"name"';

    // 数字 Number
    var num = 100;
    var num = 100.101;

    // 可以使用科学计数法
    var num = 123e5;
    var num = 123e-5;

    // 布尔 Boolean
    var x = true;
    var y = false;

    // 数组 Array
    var arr = new Array();
    arr[0] = "123";
    arr[1] = "456";
    arr[2] = "789";

    // 等效方式
    var arr = new Array("123", "456", "789");
    var arr = ["123", "456", "789"];

    // 对象 Object
    var persion = {
        firstname : "bili",
        lastname  : "123",
        id        : "12146536",
    };

    // 对象由花括号分隔， 属性以 (name : value) 的形式来定义， 由逗号分隔

    // 对象寻址
    var name = person.firstname;
    var name = person["firstname"];

    // Undefined and Null
    var name;  // Undefined
    var name = null;  // null

    // 声明变量类型
    var carname = new String;
    var x =       new Number;
    var y =       new Boolean;
    var cars =    new Array;
    var person =  new Object;
  #+END_SRC

  ~JavaScript~ 变量均为对象。当声明一个变量时，就创建了一个新的对象.

* JavaScript 对象
  + [[http://www.w3school.com.cn/js/js_obj_intro.asp][JavaScript 对象]]

* JavaScript 函数
